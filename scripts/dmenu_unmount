#!/bin/sh

# Gives a dmenu prompt to unmount mounted drives and Android phones.

getmount() { \
	[ -z "$chosen" ] && exit 1
        # shellcheck disable=SC2086
	mp="$(find $1 2>/dev/null | dmenu -i -p "Type in mount point.")" || exit 1
	test -z "$mp" && exit 1
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "No\\nYes" | dmenu -i -p "$mp does not exist. Create it?") || exit 1
		[ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
	fi
	}

unmountusb() { \
	chosen="$(echo "$usbdrives" | dmenu -i -p "Unmount which drive?")" || exit 1
	chosen="$(echo "$chosen" | awk '{print $1}')"
	notify-send "ðŸ’» USB unmounting" "$(udisksctl unmount -b $chosen &>/dev/stdout)"
	}

unmountandroid() { \
	chosen="$(echo "$anddrives" | dmenu -i -p "Which Android device?")" || exit 1
	chosen="$(echo "$chosen" | cut -d : -f 1)"
        simple-mtpfs --device -u "$chosen"
	notify-send "ðŸ¤– Android unmounting" "Android device unmounted."
	}

asktype() { \
	choice="$(printf "USB\\nAndroid" | dmenu -i -p "Unmount a USB drive or Android device?")" || exit 1
	case $choice in
		USB) unmountusb ;;
		Android) unmountandroid ;;
	esac
	}

anddrives=$(simple-mtpfs -l 2>/dev/null)
usbdrives="$(lsblk -rpo "name,type,size,mountpoint" | grep 'part\|rom' | awk '$4!=""{printf "%s (%s)\n",$1,$3}')"

if [ -z "$usbdrives" ]; then
	[ -z "$anddrives" ] && echo "No USB drive or Android device detected" && exit
	echo "Android device(s) detected."
	unmountandroid
else
	if [ -z "$anddrives" ]; then
		echo "USB drive(s) detected."
		unmountusb
	else
		echo "Unmountable USB drive(s) and Android device(s) detected."
		asktype
	fi
fi
